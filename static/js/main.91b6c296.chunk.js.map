{"version":3,"sources":["components/About.js","components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["About","props","mode","backgroundColor","color","className","style","id","type","Navbar","to","title","aboutText","onClick","toggleMode","htmlFor","Textform","useState","text","setText","heading","value","onChange","event","target","rows","disabled","length","newText","toUpperCase","showAlert","toLowerCase","replace","navigator","clipboard","writeText","split","filter","element","Alert","height","alert","role","word","lower","charAt","slice","capitalize","msg","prototype","PropTypes","string","homeText","App","setMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.91b6c296.chunk.js","sourcesContent":["import React from \"react\";\n\nexport default function About(props) {\n  let mode = {\n    backgroundColor: props.mode === \"dark\" ? \"#13466e\": \"white\",\n    color: props.mode === \"dark\" ? \"white\" : \"black\",\n  };\n  return (\n    <div className=\"container\">\n      <h1 className=\"my-3\" style={{color: props.mode === \"dark\" ? \"white\" : \"black\"}}>About Us</h1>\n      <div className=\"accordion\" id=\"accordionExample\" style={mode}>\n        <div className=\"accordion-item\" style={mode}>\n          <h2 className=\"accordion-header\" id=\"headingOne\">\n            <button\n              className=\"accordion-button\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseOne\"\n              aria-expanded=\"true\"\n              aria-controls=\"collapseOne\"\n              style={mode}\n            >\n              <strong>Analyze Your Text</strong>\n            </button>\n          </h2>\n          <div\n            id=\"collapseOne\"\n            className=\"accordion-collapse collapse show\"\n            aria-labelledby=\"headingOne\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\" style={mode}>\n              Textutils gives you a way to analyze your text quickly and\n              efficiently. Be it word cound, character count.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\" style={mode}>\n          <h2 className=\"accordion-header\" id=\"headingTwo\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseTwo\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseTwo\"\n              style={mode}\n            >\n              <strong>Free To Used</strong>\n            </button>\n          </h2>\n          <div\n            id=\"collapseTwo\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingTwo\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\" style={mode}>\n              textutils is a free character counter tool that provides instant\n              character count and word count statistics for a given text.\n              Textutlis report the number of word and characters. Thus it is\n              suitable for writing text with word and character limit.\n            </div>\n          </div>\n        </div>\n        <div className=\"accordion-item\" style={mode}>\n          <h2 className=\"accordion-header\" id=\"headingThree\">\n            <button\n              className=\"accordion-button collapsed\"\n              type=\"button\"\n              data-bs-toggle=\"collapse\"\n              data-bs-target=\"#collapseThree\"\n              aria-expanded=\"false\"\n              aria-controls=\"collapseThree\"\n              style={mode}\n            >\n              <strong>Browser Compatible</strong>\n            </button>\n          </h2>\n          <div\n            id=\"collapseThree\"\n            className=\"accordion-collapse collapse\"\n            aria-labelledby=\"headingThree\"\n            data-bs-parent=\"#accordionExample\"\n          >\n            <div className=\"accordion-body\" style={mode}>\n              This word counter softwere works in any web browser such a chrome\n              ,firefox, Internet Exporer, Safari, Opera. It suits to count\n              character in facebook, blog, books, excel document, essays etc.\n            </div>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\n\nexport default function Navbar(props) {\n  return (\n    <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\n    <div className=\"container-fluid\">\n        <Link className=\"navbar-brand\" to=\"/\">{props.title}</Link>\n        <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\n            <span className=\"navbar-toggler-icon\"></span>\n        </button>\n        <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n            <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\n                   \n                </li>\n                <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/about\">{props.aboutText}</Link>\n                </li>\n            </ul>\n           \n            <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\n                <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"flexSwitchCheckDefault\"/>\n                <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\n            </div>\n        </div>\n    </div>\n</nav>\n  );\n}\nNavbar.prototype = {\n    title: PropTypes.string,\n    homeText: PropTypes.string,\n    aboutText: PropTypes.string,\n}\n","import React, { useState } from \"react\";\n\nexport default function Textform(props) {\n  const [text, setText] = useState(\"\");\n\n  const handleUpclick = () => {\n    // console.log(\"Uppercase was clicked\");\n    let newText = text.toUpperCase();\n    setText(newText);\n    props.showAlert(\"Convert To Uppercase\", \"success\");\n  };\n\n  const handleLoclick = () => {\n    // console.log(\"Uppercase was clicked\");\n    let newText = text.toLowerCase();\n    setText(newText);\n    props.showAlert(\"Convert To Lowercase\", \"success\");\n  };\n\n  const handleOnchange = (event) => {\n    // console.log(\"on Change\");\n    setText(event.target.value);\n  };\n\n  const handleClearclick = () => {\n    setText(\"\");\n    props.showAlert(\"Clear Text\", \"success\");\n  };\n\n  const handleCopy = () => {\n    navigator.clipboard.writeText(text);\n    props.showAlert(\"Copy All Text\", \"success\");\n  };\n\n  const handleExtraSpaces = () => {\n    let newText = text.replace(/ +(?= )/g, \"\");\n    setText(newText);\n    props.showAlert(\"Remove All Extra Spaces\", \"success\");\n  };\n\n  return (\n    <>\n      <div\n        className=\"container\"\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\n      >\n        <h1>{props.heading}</h1>\n        <div className=\"mb-3\">\n          <textarea\n            className=\"form-control\"\n            value={text}\n            onChange={handleOnchange}\n            style={{\n              backgroundColor: props.mode === \"dark\" ? \"#13466e\" : \"white\",\n              color: props.mode === \"dark\" ? \"white\" : \"black\",\n            }}\n            id=\"myBox\"\n            rows=\"8\"\n          ></textarea>\n        </div>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleUpclick}\n        >\n          Convert To Uppercase\n        </button>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleLoclick}\n        >\n          Convert To Lowercase\n        </button>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleExtraSpaces}\n        >\n          Remove Extra Spaces\n        </button>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleCopy}\n        >\n          Copy Text\n        </button>\n        <button\n          disabled={text.length === 0}\n          className=\"btn btn-primary mx-1 my-1\"\n          onClick={handleClearclick}\n        >\n          Clear Text\n        </button>\n      </div>\n      <div\n        className=\"container my-3\"\n        style={{ color: props.mode === \"dark\" ? \"white\" : \"black\" }}\n      >\n        <h2>Your Text Summary</h2>\n        <p>\n          {\n            text.split(/\\s+/).filter((element) => {\n              return element.length !== 0;\n            }).length\n          }{\" \"}\n          words and {text.length} characters\n        </p>\n        <p>\n          {0.008 *\n            text.split(\" \").filter((element) => {\n              return element.length !== 0;\n            }).length}{\" \"}\n          minutes read\n        </p>\n        <h2>Preview</h2>\n        <p>\n          {text.length > 0\n            ? text\n            : \"Nothing to preview!\"}\n        </p>\n      </div>\n    </>\n  );\n}\n","import React from \"react\";\n\nexport default function Alert(props) {\n  \n  const capitalize = (word) => {\n    const lower = word.toLowerCase();\n    return lower.charAt(0).toUpperCase()+lower.slice(1);\n  };\n\n  return (\n    <div style={{height: \"40px\"}}>\n    {props.alert && (\n      <div\n        className={`alert alert-${props.alert.type} alert-dismissible fade show`}\n        role=\"alert\"\n      >\n        <strong>{capitalize(props.alert.type)}</strong>:{props.alert.msg}\n         {/* <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>  */}\n      </div>\n    )}\n    </div>\n  );\n}\n","import \"./App.css\";\nimport About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport React, { useState } from \"react\";\nimport Alert from \"./components/Alert\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\n\nfunction App() {\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark mode has been enable\", \"success\");\n    } else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light mode has been enable\", \"success\");\n    }\n  };\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type,\n    });\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  };\n\n  return (\n    <>\n      <Router>\n        <Navbar\n          title=\"TextUtils\"\n          homeText=\"Home\"\n          aboutText=\"About us\"\n          mode={mode}\n          toggleMode={toggleMode}\n        />\n        <Alert alert={alert} />\n        <div className=\"container my-3\">\n          <Switch>\n            <Route exact path=\"/\">\n              <Textform\n                showAlert={showAlert}\n                heading=\"Enter the text to analyze below\"\n                mode={mode}\n              />\n            </Route>\n            <Route exact path=\"/about\">\n              <About mode={mode}/>\n            </Route>\n          </Switch>\n        </div>\n      </Router>\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}